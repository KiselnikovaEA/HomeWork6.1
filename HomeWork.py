# Дан список: ['в', '5', 'часов', '17', 'минут', 'температура', 'воздуха', 'была', '+5', 'градусов']
# Необходимо его обработать — обособить каждое целое число (вещественные не трогаем) кавычками (добавить кавычку до и кавычку после элемента списка, являющегося числом) и дополнить нулём до двух целочисленных разрядов:
# ['в', '"', '05', '"', 'часов', '"', '17', '"', 'минут', 'температура', 'воздуха', 'была', '"', '+05', '"', 'градусов']

# Сформировать из обработанного списка строку:
# в "05" часов "17" минут температура воздуха была "+05" градусов

# Подумать, какое условие записать, чтобы выявить числа среди элементов списка? Как модифицировать это условие для чисел со знаком?
# Примечание: если обособление чисел кавычками не будет получаться - можете вернуться к его реализации позже. Главное: дополнить числа до двух разрядов нулём!

# * (вместо задачи 2) Решить задачу 2 не создавая новый список (как говорят, in place). Эта задача намного серьёзнее, чем может сначала показаться.

# ЗАМЕЧАНИЕ: Если кавычки при реформировании списка сразу "приклеивать" к числу, то выведется как в выводе в условии задачи (стр. 6),
# но если кавычки делать отдельным элементом (как в другом условии задачи, стр. 3), то добавляются пробелы при выводе (реализация ниже)

# list1 = ['в', '5', 'часов', '17', 'минут', 'температура', 'воздуха', 'была', '+5', 'градусов']

# i = 0
# while i < len(list1):
#     if list1[i].isdigit():
#         list1.insert(i, '"')
#         list1[i + 1] = f'{int(list1[i + 1]):02d}'
#         list1.insert(i + 2, '"')
#         i += 3
#     elif list1[i][0] == '+' and list1[i][1].isdigit():
#         list1.insert(i, '"')
#         list1[i + 1] = f'+{int(list1[i + 1]):02d}'
#         list1.insert(i + 2, '"')
#         i += 3
#     else:
#         i += 1

# print(' '.join(list1))

# -------------------------------------------------------------------------------------------------------------------------------------------------------------
# ЗАДАЧА 2. Дан список, содержащий искажённые данные с должностями и именами сотрудников: 
# ['инженер-конструктор Игорь', 'главный бухгалтер МАРИНА', 'токарь высшего разряда нИКОЛАй', 'директор аэлита']
# Известно, что имя сотрудника всегда в конце строки. 
# Сформировать и вывести на экран фразы вида: 'Привет, Игорь!' 
# Подумать, как получить имена сотрудников из элементов списка, как привести их к корректному виду.
# Можно ли при этом не создавать новый список?

# hi = 'Привет, {}!'

# list1 = ['инженер-конструктор Игорь', 'главный бухгалтер МАРИНА',
#            'токарь высшего разряда нИКОЛАй', 'директор аэлита']

# for name in list1:
#     print(hi.format(name.split()[-1].title()))

# -------------------------------------------------------------------------------------------------------------------------------------------------------------
# ЗАДАЧА 3. Создать список, содержащий цены на товары (10–20 товаров), например:
# [57.8, 46.51, 97, ...]

# Вывести на экран эти цены через запятую в одну строку, цена должна отображаться в виде <r> руб <kk> коп (например «5 руб 04 коп»).
# Подумать, как из цены получить рубли и копейки, как добавить нули, если, например, получилось 7 копеек или 0 копеек (должно быть 07 коп или 00 коп).
# Вывести цены, отсортированные по возрастанию, новый список не создавать (доказать, что объект списка после сортировки остался тот же).
# Создать новый список, содержащий те же цены, но отсортированные по убыванию.
# Вывести цены пяти самых дорогих товаров. Сможете ли вывести цены этих товаров по возрастанию, написав минимум кода?

# list = [57.8, 46.51, 97, 66, 19.48, 83, 33.11, 55, 7.77, 49]

# store_id = id(list)
# print(f"{'a':-^79}")
# end_word: str = ", "

# for i, num in enumerate(list):

#     fix_price = str(f"{float(num):.2f}").split(".")

#     if i == len(list) - 1:
#         end_word = "\n"

#     print(f"{fix_price[0]} руб {fix_price[1]} коп", end=end_word)


# print(f"{'b':-^79}")
# print(f"id перед сортировкой {store_id}")
# list.sort()
# print(list)
# print(f"id после сортировки {id(list)}")

# print(f"{'c':-^79}")

# copy_of_list = list.copy()
# copy_of_list.sort(reverse=True)

# print(copy_of_list)
# print(store_id)
# print(id(copy_of_list))


# print(f"{'d':-^79}")
# print("Цены пяти самых дорогих товаров", list[-6:-1])


list1 = [57.8, 46.51, 97, 66, 19.48, 83, 33.11, 55, 7.77, 49]

print()
end_word: str = ", "

for i, num in enumerate(list1):

    fix_price = str(f"{float(num):.2f}").split(".")

    if i == len(list1) - 1:
        end_word = "\n"

    print(f"{fix_price[0]} руб {fix_price[1]} коп", end=end_word)

print()
print(f"id перед сортировкой: {id(list1)}")
list1.sort()
print(f'По возрастанию: {list1}')
print(f"id после сортировки: {id(list1)}")

print()

list1_copy = list1.copy()
list1_copy.sort(reverse=True)

print(f'По убыванию (копия списка): {list1_copy}')
print(f'id списка: {id(list1)}')
print(f'id копии списка: {id(list1_copy)}')


print()
print("Цены пяти самых дорогих товаров", list1[-6:-1])